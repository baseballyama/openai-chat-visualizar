import{a as q,t as k}from"../chunks/disclose-version.CdsDfiRt.js";import{at as te,ad as ae,h as re,au as x,s as o,f as se,t as V,Y as e,V as p,c as b,r as f}from"../chunks/runtime.36UGXw8x.js";import{e as K,s as C}from"../chunks/render.DoUMRPuy.js";import{p as h,i as T}from"../chunks/if.Ds81CiwD.js";import{e as le,i as ie}from"../chunks/each.uO7l4ZYK.js";import{a as ne,r as oe,b as I,s as H}from"../chunks/attributes.BjCZvL11.js";function ce(t,l,u,_=u){t.addEventListener(l,u);const s=t.__on_r;s?t.__on_r=()=>{s(),_()}:t.__on_r=_,ne()}function D(t,l,u=l){var _=te();ce(t,"input",()=>{var s=J(t)?L(t.value):t.value;u(s),_&&s!==(s=l())&&(t.value=s??"")}),ae(()=>{var s=l();if(re&&t.defaultValue!==t.value){u(t.value);return}J(t)&&s===L(t.value)||t.type==="date"&&!s&&!t.value||s!==t.value&&(t.value=s??"")})}function J(t){var l=t.type;return l==="number"||l==="range"}function L(t){return t===""?null:+t}var ue=k('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),ve=k('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),de=k('<ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence"></textarea> <!></li> <li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence"></textarea> <!></li> <li class="svelte-1ruqg1j"> </li> <li class="svelte-1ruqg1j"><button class="svelte-1ruqg1j">Delete</button></li></ul>'),pe=k('<p class="progress svelte-1ruqg1j"> </p>'),_e=k('<p class="openai-api-key svelte-1ruqg1j">OpenAI API key</p> <input placeholder="OpenAI API key" class="api-input svelte-1ruqg1j"> <p class="input-error svelte-1ruqg1j"> </p> <ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j">Sentence1</li> <li class="svelte-1ruqg1j">Sentence2</li> <li class="svelte-1ruqg1j">Cosine Similarity</li> <li class="svelte-1ruqg1j">Delete</li></ul> <!> <div class="buttons svelte-1ruqg1j"><button class="svelte-1ruqg1j">+ Add</button> <button class="execute-button svelte-1ruqg1j">Embeddings</button></div> <!>',1);function he(t){let l=x(h(sessionStorage.getItem("openaiApiKey")||"")),u=x("");const _={};let s=x(0),A=x(0),v=x(h([{a:"",aVector:[],b:"",bVector:[],similarity:0}]));const R=()=>{p(v,h([...e(v),{a:"",aVector:[],b:"",bVector:[],similarity:0}]))},Y=r=>{p(v,h(e(v).filter((a,i)=>i!==r)))},M=async r=>{if(_[r])return _[r];const n=(await(await fetch("https://api.openai.com/v1/embeddings",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e(l)}`},body:JSON.stringify({input:r,model:"text-embedding-3-small"})})).json()).data[0].embedding;return _[r]=n,n},G=(r,a)=>{const i=(c,m)=>{let d=0;for(let g=0;g<c.length;(g+=1)-1)d+=c[g]*m[g];return d},n=c=>{let m=0;for(let d=0;d<c.length;(d+=1)-1)m+=c[d]*c[d];return Math.sqrt(m)};return i(r,a)/(n(r)*n(a))},Q=async()=>{if(p(s,h(e(v).length)),p(A,0),p(u,""),e(l)===""){p(u,"Please input your OpenAI API key");return}sessionStorage.setItem("openaiApiKey",e(l)),e(v).flatMap(async r=>{const[a,i]=await Promise.all([M(r.a),M(r.b)]);p(A,e(A)+1);const n=G(a,i);r.aVector=a,r.bVector=i,r.similarity=n,p(v,h([...e(v)]))})};var N=_e(),S=o(se(N),2);oe(S);var P=o(S,2),U=b(P);f(P);var z=o(P,4);le(z,17,()=>e(v),ie,(r,a,i)=>{var n=de(),c=b(n),m=b(c);I(m);var d=o(m,2);T(d,()=>e(a).aVector.length>0,y=>{var j=ue();I(j),V(()=>H(j,`[${e(a).aVector.length>0&&e(a).aVector.join(", ")}]<`)),q(y,j)}),f(c);var g=o(c,2),$=b(g);I($);var Z=o($,2);T(Z,()=>e(a).bVector.length>0,y=>{var j=ve();I(j),V(()=>H(j,`[${e(a).bVector.length>0&&e(a).bVector.join(", ")}]<`)),q(y,j)}),f(g);var E=o(g,2),w=b(E);V(()=>C(w,e(a).similarity===0?"(Not Embedded)":e(a).similarity.toFixed(6))),f(E);var F=o(E,2),ee=b(F);f(F),f(n),D(m,()=>e(a).a,y=>e(a).a=y),D($,()=>e(a).b,y=>e(a).b=y),K("click",ee,()=>Y(i)),q(r,n)});var O=o(z,2),B=b(O),W=o(B,2);f(O);var X=o(O,2);T(X,()=>e(s)>0,r=>{var a=pe(),i=b(a);f(a),V(()=>C(i,`${e(A)??""}/${e(s)??""} tasks completed`)),q(r,a)}),V(()=>C(U,e(u))),D(S,()=>e(l),r=>p(l,r)),K("click",B,R),K("click",W,Q),q(t,N)}export{he as component};
