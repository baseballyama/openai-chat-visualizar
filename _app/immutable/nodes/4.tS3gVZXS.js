import{a as x,t as A,c as m,s as e,f as se}from"../chunks/disclose-version.6aZjTlSh.js";import{K as le,N as ie,l as h,t as k,D as s,s as p,a6 as l}from"../chunks/runtime.C_tlSiHQ.js";import{a as C,e as K,s as O}from"../chunks/render.DqZJeKMG.js";import{p as q,i as $}from"../chunks/if.pO_nrE3v.js";import{e as ne,i as oe}from"../chunks/each.iuKU1YIr.js";import{a as ue,r as ce,b as V,s as H}from"../chunks/attributes.BL6Pav9f.js";function ve(a,i,_,n=_){a.addEventListener(i,_);const j=a.__on_r;j?a.__on_r=()=>{j(),n()}:a.__on_r=n,ue()}function E(a,i,_){ve(a,"input",()=>{ie(()=>_(J(a)?L(a.value):a.value))}),le(()=>{var n=i();a.__value=n,!(J(a)&&n===L(a.value))&&(a.type==="date"&&!n&&!a.value||(a.value=C(n)))})}function J(a){var i=a.type;return i==="number"||i==="range"}function L(a){return a===""?null:+a}var de=A('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),pe=A('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),_e=A('<ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence" class="svelte-1ruqg1j"></textarea> <!></li> <li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence" class="svelte-1ruqg1j"></textarea> <!></li> <li class="svelte-1ruqg1j"> </li> <li class="svelte-1ruqg1j"><button class="svelte-1ruqg1j">Delete</button></li></ul>'),ge=A('<p class="progress svelte-1ruqg1j"> </p>'),me=A('<p class="openai-api-key svelte-1ruqg1j">OpenAI API key</p> <input placeholder="OpenAI API key" class="api-input svelte-1ruqg1j"> <p class="input-error svelte-1ruqg1j"> </p> <ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j">Sentence1</li> <li class="svelte-1ruqg1j">Sentence2</li> <li class="svelte-1ruqg1j">Cosine Similarity</li> <li class="svelte-1ruqg1j">Delete</li></ul> <!> <div class="buttons svelte-1ruqg1j"><button class="svelte-1ruqg1j">+ Add</button> <button class="execute-button svelte-1ruqg1j">Embeddings</button></div> <!>',1);function he(a){let i=h(q(sessionStorage.getItem("openaiApiKey")||"")),_=h("");const n={};let j=h(0),I=h(0),c=h(q([{a:"",aVector:[],b:"",bVector:[],similarity:0}]));const R=()=>{p(c,q([...s(c),{a:"",aVector:[],b:"",bVector:[],similarity:0}]))},G=r=>{p(c,q(s(c).filter((t,o)=>o!==r)))},D=async r=>{if(n[r])return n[r];const u=(await(await fetch("https://api.openai.com/v1/embeddings",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s(i)}`},body:JSON.stringify({input:r,model:"text-embedding-3-small"})})).json()).data[0].embedding;return n[r]=u,u},Q=(r,t)=>{const o=(v,g)=>{let d=0;for(let b=0;b<v.length;b++)d+=v[b]*g[b];return d},u=v=>{let g=0;for(let d=0;d<v.length;d++)g+=v[d]*v[d];return Math.sqrt(g)};return o(r,t)/(u(r)*u(t))},U=async()=>{if(p(j,q(s(c).length)),p(I,0),p(_,""),s(i)===""){p(_,"Please input your OpenAI API key");return}sessionStorage.setItem("openaiApiKey",s(i)),s(c).flatMap(async r=>{const[t,o]=await Promise.all([D(r.a),D(r.b)]);p(I,s(I)+1);const u=Q(t,o);r.aVector=t,r.bVector=o,r.similarity=u,p(c,q([...s(c)]))})};var N=me(),W=se(N),S=e(e(W,!0));ce(S);var T=e(e(S,!0)),X=m(T),Y=e(e(T,!0)),M=e(e(Y,!0));ne(M,65,()=>s(c),oe,(r,t,o)=>{var u=_e(),v=m(u),g=m(v);V(g);var d=e(e(g,!0));$(d,()=>l(t).aVector.length>0,f=>{var y=de();V(y),k(()=>H(y,`[${l(t).aVector.length>0&&l(t).aVector.join(", ")}]<`)),x(f,y)});var b=e(e(v,!0)),P=m(b);V(P);var ee=e(e(P,!0));$(ee,()=>l(t).bVector.length>0,f=>{var y=pe();V(y),k(()=>H(y,`[${l(t).bVector.length>0&&l(t).bVector.join(", ")}]<`)),x(f,y)});var F=e(e(b,!0)),te=m(F);k(()=>O(te,l(t).similarity===0?"(Not Embedded)":l(t).similarity.toFixed(6)));var ae=e(e(F,!0)),re=m(ae);E(g,()=>l(t).a,f=>l(t).a=f),E(P,()=>l(t).b,f=>l(t).b=f),K("click",re,()=>G(l(o)),!1),x(r,u)});var z=e(e(M,!0)),B=m(z),Z=e(e(B,!0)),w=e(e(z,!0));$(w,()=>s(j)>0,r=>{var t=ge(),o=m(t);k(()=>O(o,`${C(s(I))}/${C(s(j))} tasks completed`)),x(r,t)}),k(()=>O(X,s(_))),E(S,()=>s(i),r=>p(i,r)),K("click",B,R,!1),K("click",Z,U,!1),x(a,N)}export{he as component};
