import{h as ne,f as oe,s as e,c as _,a as h,t as A,r as g}from"../chunks/disclose-version.D2u4SeCP.js";import{K as ue,f as V,t as k,x as s,s as m,T as l}from"../chunks/runtime.8FjZJPOv.js";import{e as C,s as D}from"../chunks/render.xOaXH0fK.js";import{p as x,i as M}from"../chunks/if.ZA7qb4Hz.js";import{e as ce,i as ve}from"../chunks/each.CWocde0M.js";import{a as de,r as pe,b as S,s as L}from"../chunks/attributes.AYSCMNQw.js";function _e(t,i,v,u=v){t.addEventListener(i,v);const q=t.__on_r;q?t.__on_r=()=>{q(),u()}:t.__on_r=u,de()}function N(t,i,v){_e(t,"input",()=>{v(R(t)?G(t.value):t.value)}),ue(()=>{var u=i();if(ne&&t.defaultValue!==t.value){v(t.value);return}R(t)&&u===G(t.value)||t.type==="date"&&!u&&!t.value||(t.value=u??"")})}function R(t){var i=t.type;return i==="number"||i==="range"}function G(t){return t===""?null:+t}var ge=A('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),me=A('<textarea class="vector svelte-1ruqg1j" readonly=""></textarea>'),be=A('<ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence" class="svelte-1ruqg1j"></textarea> <!></li> <li class="svelte-1ruqg1j"><textarea placeholder="Input your sentence" class="svelte-1ruqg1j"></textarea> <!></li> <li class="svelte-1ruqg1j"> </li> <li class="svelte-1ruqg1j"><button class="svelte-1ruqg1j">Delete</button></li></ul>'),fe=A('<p class="progress svelte-1ruqg1j"> </p>'),ye=A('<p class="openai-api-key svelte-1ruqg1j">OpenAI API key</p> <input placeholder="OpenAI API key" class="api-input svelte-1ruqg1j"> <p class="input-error svelte-1ruqg1j"> </p> <ul class="svelte-1ruqg1j"><li class="svelte-1ruqg1j">Sentence1</li> <li class="svelte-1ruqg1j">Sentence2</li> <li class="svelte-1ruqg1j">Cosine Similarity</li> <li class="svelte-1ruqg1j">Delete</li></ul> <!> <div class="buttons svelte-1ruqg1j"><button class="svelte-1ruqg1j">+ Add</button> <button class="execute-button svelte-1ruqg1j">Embeddings</button></div> <!>',1);function Ae(t){let i=V(x(sessionStorage.getItem("openaiApiKey")||"")),v=V("");const u={};let q=V(0),I=V(0),d=V(x([{a:"",aVector:[],b:"",bVector:[],similarity:0}]));const Q=()=>{m(d,x([...s(d),{a:"",aVector:[],b:"",bVector:[],similarity:0}]))},U=r=>{m(d,x(s(d).filter((a,n)=>n!==r)))},z=async r=>{if(u[r])return u[r];const o=(await(await fetch("https://api.openai.com/v1/embeddings",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s(i)}`},body:JSON.stringify({input:r,model:"text-embedding-3-small"})})).json()).data[0].embedding;return u[r]=o,o},W=(r,a)=>{const n=(c,b)=>{let p=0;for(let f=0;f<c.length;f++)p+=c[f]*b[f];return p},o=c=>{let b=0;for(let p=0;p<c.length;p++)b+=c[p]*c[p];return Math.sqrt(b)};return n(r,a)/(o(r)*o(a))},X=async()=>{if(m(q,x(s(d).length)),m(I,0),m(v,""),s(i)===""){m(v,"Please input your OpenAI API key");return}sessionStorage.setItem("openaiApiKey",s(i)),s(d).flatMap(async r=>{const[a,n]=await Promise.all([z(r.a),z(r.b)]);m(I,s(I)+1);const o=W(a,n);r.aVector=a,r.bVector=n,r.similarity=o,m(d,x([...s(d)]))})};var B=ye(),Y=oe(B),P=e(e(Y,!0));pe(P);var K=e(e(P,!0)),Z=_(K);g(K);var O=e(e(K,!0)),w=_(O),ee=e(e(w,!0)),te=e(e(ee,!0));e(e(te,!0)),g(O);var F=e(e(O,!0));ce(F,65,()=>s(d),ve,(r,a,n)=>{var o=be(),c=_(o),b=_(c);S(b);var p=e(e(b,!0));M(p,()=>l(a).aVector.length>0,y=>{var j=ge();S(j),k(()=>L(j,`[${l(a).aVector.length>0&&l(a).aVector.join(", ")}]<`)),h(y,j)}),g(c);var f=e(e(c,!0)),E=_(f);S(E);var se=e(e(E,!0));M(se,()=>l(a).bVector.length>0,y=>{var j=me();S(j),k(()=>L(j,`[${l(a).bVector.length>0&&l(a).bVector.join(", ")}]<`)),h(y,j)}),g(f);var T=e(e(f,!0)),le=_(T);k(()=>D(le,l(a).similarity===0?"(Not Embedded)":l(a).similarity.toFixed(6))),g(T);var J=e(e(T,!0)),ie=_(J);g(J),g(o),N(b,()=>l(a).a,y=>l(a).a=y),N(E,()=>l(a).b,y=>l(a).b=y),C("click",ie,()=>U(l(n)),!1),h(r,o)});var $=e(e(F,!0)),H=_($),ae=e(e(H,!0));g($);var re=e(e($,!0));M(re,()=>s(q)>0,r=>{var a=fe(),n=_(a);g(a),k(()=>D(n,`${s(I)??""}/${s(q)??""} tasks completed`)),h(r,a)}),k(()=>D(Z,s(v))),N(P,()=>s(i),r=>m(i,r)),C("click",H,Q,!1),C("click",ae,X,!1),h(t,B)}export{Ae as component};
